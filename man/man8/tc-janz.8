.\" Copyright © 2022 mirabilos <t.glaser@tarent.de>
.\" Licensor: Deutsche Telekom LLCTO
.\"
.\" Provided that these terms and disclaimer and all copyright notices
.\" are retained or reproduced in an accompanying document, permission
.\" is granted to deal in this work without restriction, including un‐
.\" limited rights to use, publicly perform, distribute, sell, modify,
.\" merge, give away, or sublicence.
.\"
.\" This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
.\" the utmost extent permitted by applicable law, neither express nor
.\" implied; without malicious intent or gross negligence. In no event
.\" may a licensor, author or contributor be held liable for indirect,
.\" direct, other damage, loss, or other issues arising in any way out
.\" of dealing in the work, even if advised of the possibility of such
.\" damage or existence of a defect, except proven that it results out
.\" of said person’s immediate fault when using the work as intended.
.\"-
.if \n(.g .hlm 0
.Dd August 17, 2022
.Dt TC\-JANZ 8
.Os Linux
.Sh NAME
.Nm tc\-janz
.Nd bespoke E/// PoC-like traffic scheduler
.Sh SYNOPSIS
.Nm tc
.Ic qdisc ...\& Nm janz
.Op Ic limit Ar PACKETS
.Op Ic rate Ar RATE
.Op Ic handover Ar TIME
.Op Ic markfree Ar TIME
.Op Ic markfull Ar TIME
.Op Ic subbufs Ar NUMBER
.Op Ic fragcache Ar NUMBER
.Sh DESCRIPTION
JENS is a network limitation simulator used in an
.Pq L4S or similar
.No AML Pq Adaptive Managed Latency
scenario to aid in developing latency- and bandwidth-aware applications.
The
.Nm janz
queueing discipline is a bespoke Linux kernel module developed as part of JENS
.Pq by Deutsche Telekom LLCTO
that provides ECN CE
.Pq Dq congestion experienced
marking on ECN-enabled traffic using marking algorithms resembling
the real-life PoC scenario as closely as possible as well as takes care
of traffic shaping (limitation of bandwidth) by packet pacing.
.Pp
The
.Nm sch_janz
qdisc is comprised of three FIFOs incoming packets sort into
based on their IP QoS field, in which the TOS reading is used to
separate interactive (lodelay), regular and bulk traffic; packets
to send are then selected from the first FIFO that has any.
The standard Linux qdisc operates the same;
.Nm sch_janz
moves ARP, RARP, and PPPoE discovery traffic into the lodelay class though.
.Pp
Outgoing packets are paced based on the configured
.Ar rate
and
.Ar handover
delay; that is, the next packet is withheld until the time necessary
to achieve the requested throughput
.Pq and handover interruption .
All packets that take longer than
.Ar markfull
to pass the queue
.Pq Dq sojourn time
as well as a percentage of those taking more than
.Ar markfree
.Pq longer queue delay rising the chance
are marked as ECN CE
.Pq Dq congestion experienced .
.Pp
.Nm sch_janz
supports an extensive relayfs-based reporting interface exposed
via debugfs; refer to the README and the provided sample applications.
.Sh PARAMETERS
.Bl -tag -width XX
.It Ic limit
is a hard limit on the real queue size.
When this limit is reached, packets are dropped.
Default: 10240\ packets
.It Ic rate
is the bandwidth outgoing packets are limited to.
Default: 10\ Mbit/s
.It Ic handover
stops traffic for the specified amount of time.
.It Ic markfree
is the maximum queue delay packets are allowed to sojourn in the queue
without the extra ECN CE marking done for JENS.
Default: 4\ ms
.It Ic markfull
is the minimum queue delay at which packets will be marked (see above)
with 100% probability.
Default: 14\ ms
.It Ic subbufs
enables debugfs functionality, for use with
.Nm jensdmp
or its Java\(rg wrapper.
Setting this to 1 will use a suitable default amount of subbuffers
.Pq currently 1024 ;
any other value is used as number of subbuffers (containing 256 records,
each sized 64 bytes, that is, 16\ KiB per subbuffer).
This parameter can only be set at load time because memory has to be allocated.
Default: 1
.It Ic fragcache
sets the size of the IP packet fragment cache, in 64-byte structs.
This parameter can only be set at load time because memory has to be allocated.
Default: 1024
.El
.Sh STATISTICS
This qdisc reports extensively via relayfs over debugfs; therefore, regular
.Xr tc 8
statistics are not provided beyond the bare minimum.
.Sh EXAMPLES
Set up a queue with standard parameters and display its statistics:
.Bd -literal
$ sudo tc qdisc add dev eth0 root handle 1: janz
$ sudo tc \-s qdisc show dev eth0
qdisc janz 1: root refcnt 2 limit 10240 rate 10000kbit \e
    markfree 4ms markfull 14ms subbufs 1024 fragcache 1024
 Sent 158 bytes 1 pkt (dropped 0, overlimits 0, requeues 0)
 backlog 0b 0p
.Ed
.Sh SEE ALSO
.Xr tc 8 ,
.Xr tc-jens 8 ,
.Xr tc-jhtb 8
.Pp
.Pa /usr/share/doc/sch\-jens\-dkms/README.gz
.Pp
.Pa /usr/share/doc/iproute2/examples/JensReaderDemo.java
.Sh AUTHORS
.An mirabilos Aq t.glaser@tarent.de
for Deutsche Telekom LLCTO
.Sh CAVEATS
This qdisc is only supported as the root egress qdisc on a device.
It is highly experimental.
.Pp
The traffic rate is internally converted to nanoseconds per byte
needed to transfer, limiting it to about 8 Gbit/s; the closer the
rate gets to the extremes, the less usable it will be.
Experiments with 128 kbit/s as a lower bound show mixed results.
